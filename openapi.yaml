openapi: 3.0.1
info:
  title: Lolesports Api
  description: Unofficial documentation to the lolesports Api
  version: 1.0.0

paths:
  /getLeagues:
    get:
      operationId: getLeagues
      parameters:
        - $ref: '#/components/parameters/hl'

      responses:
        '200':
          description: Successful request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      leagues:
                        type: array
                        items:
                          $ref: '#/components/schemas/leagueLarge'

      security:
        - apiKeyAuth: []

      servers:
        - url: &esports-api https://esports-api.lolesports.com/persisted/gw

  /getSchedule:
    get:
      operationId: getSchedule
      parameters:
        - $ref: '#/components/parameters/hl'
        - $ref: '#/components/parameters/leagueId'
        - $ref: '#/components/parameters/pageToken'

      responses:
        '200':
          description: Successful request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      schedule:
                        type: object
                        properties:
                          updated:
                            description: The time the data presented was last updated
                            type: string
                            format: date-time
                          pages:
                            type: object
                            properties:
                              older:
                                $ref: "#/components/schemas/pageToken"
                              newer:
                                $ref: "#/components/schemas/pageToken"
                          events:
                            type: array
                            items:
                              $ref: '#/components/schemas/event'
      security:
        - apiKeyAuth: []

      servers:
        - url: *esports-api

  # Need to test if the leagueId and tournamentId work with this endpoint
  /getLive:
    get:
      operationId: getLive
      parameters:
        - $ref: '#/components/parameters/hl'

      responses:
        '200':
          description: Successful request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      schedule:
                        type: object
                        properties:
                          events:
                            type: array
                            description: |
                              Array of event objects representing matches that are
                              currently ongoing.

                              This will be null if no match is taking place at that
                              time
                            nullable: true
                            items:
                              $ref: '#/components/schemas/event'

  

components:
  schemas:
    pageToken:
      description: &pagetoken |
        Base 64 encoded string used to determine the
        next "page" of data to pull
      type: string
      format: byte
      nullable: true

    leagueSmall:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string

    leagueLarge:
      type: object
      properties:
        id:
          description: The league's ID
          type: integer
        image:
          description: URL to an image of the League's logo
          type: string
          minLength: 1
        name:
          description: The league's name
          type: string
          minLength: 1
        priority:
          description: Unknown
          type: integer
        region:
          description: |
            Indicates which type of tournament the league is. Whether
            international or a regional tournament. The region name is
            given.
          type: string
        slug:
          description: |
            shorthand indentifier of a league.
          type: string

    record:
      type: object
      nullable: true
      description: |
        Describes the amount of wins and losses the team has incurred
        in a particular stage of the tournament specifically group stage

        For knockout phase, each series is treated individually.

        This object is null when the match is ongoing
      properties:
        losses:
          type: number
          minLength: 1
        wins:
          type: number
          minLength: 1

    result:
      type: object
      properties:
        gameWins:
          type: number
          description: |
            The number of games the team has won in that
            in the series
          minLength: 1
        outcome:
          type: string
          nullable: true
          description: |
            Indicate whether the team won or lost the series

            This will be null if the match is ongoing
          enum: [loss, win]

    team:
      type: object
      properties:
        code:
          type: string
          minLength: 1
        image:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        record:
          $ref: '#/components/schemas/record'
        result:
          $ref: '#/components/schemas/result'

    match:
      type: object
      properties:
        id:
          description: The match id
          type: number
        strategy:
          type: object
          properties:
            type:
              type: string
              enum: [bestOf]
            count:
              type: number
              enum: [1, 3, 5]
        teams:
          type: array
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/team'

    event:
      type: object
      properties:
        startTime:
          type: string
          description: The time the match started
          format: date-time
        blockName:
          type: string
          nullable: true
        state:
          type: string
          enum: [completed, unstarted, inProgress]
        type:
          type: string
          enum: [match]
        league:
          $ref: '#/components/schemas/leagueSmall'
        match:
          $ref: '#/components/schemas/match'

  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

  parameters:
    hl:
      name: hl
      in: query
      required: true
      description: |
        This stipulates the locale.
      schema:
        type: string

    leagueId:
      name: leagueId
      in: query
      description: |
        The id(s) of the league(s) you want details of
      schema:
        type: array
        items:
          type: number

    pageToken:
      name: pageToken
      in: query
      description: *pagetoken
      schema:
        type: string
        format: byte